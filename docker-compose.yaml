version: '3.8'

services:
  # redis:
  #   image: "redis:alpine"
  #   ports:
  #     - "6379:6379"
  #   env_file: .env
  #   volumes:
  #     - redis-data:/data
  #   environment:
  #     TZ: Asia/Jerusalem
  #   healthcheck:
  #     test: [ "CMD", "redis-cli", "ping" ]
  #     interval: 10s
  #     timeout: 30s
  #     retries: 50
  #     start_period: 30s
  #   restart: always
  #   command: redis-server --requirepass ${REDIS_PASSWORD}

  dataproducer:
    build:
      context: ./dataProducer
      dockerfile: Dockerfile
    container_name: dataProducer
    env_file: .env
    # depends_on:
    #   - zookeeper
    #   - kafka
    #   - redis
    #   - schema-registry

    # zookeeper:
    #   image: bitnami/zookeeper:latest
    #   ports:
    #     - "2181:2181"
    #   environment:
    #     - ALLOW_ANONYMOUS_LOGIN=yes
    #   volumes:
    #     - zookeeper_data:/bitnami

    # kafka:
    #   image: bitnami/kafka:latest
    #   ports:
    #     - "9092:9092"
    #   environment:
    #     - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
    #     - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
    #     - ALLOW_PLAINTEXT_LISTENER=yes
    #   volumes:
    #     - kafka_data:/bitnami
    #   depends_on:
    #     - zookeeper

    # schema-registry:
    #   image: confluentinc/cp-schema-registry:latest
    #   depends_on:
    #     - kafka
    #   ports:
    #     - "8081:8081"
    #   environment:
    #     - SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS=kafka:9092
    #     - SCHEMA_REGISTRY_HOST_NAME=schema-registry
    #     - SCHEMA_REGISTRY_LISTENERS=http://0.0.0.0:8081

    # volumes:
    # redis-data:
    # zookeeper_data:
    # kafka_data:
